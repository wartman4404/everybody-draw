function main(aptr, bptr, x, y, points)
  local a = ffi.cast("struct ShaderPaintPoint*", aptr)
  local b = ffi.cast("struct ShaderPaintPoint*", bptr)
  local steps = math.max(math.abs(a.x - b.x), math.abs(a.y - b.y))
  if steps < 1 then steps = 1 end
  local timescale = 10
  local stepx = (b.x - a.x) / steps
  local stepy = (b.y - a.y) / steps
  local steptime = (b.time - a.time) / (steps * timescale)
  local stepsize = (b.size - a.size) / steps
  local stepspeed = (b.speed - a.speed) / steps
  local stepdistance = (b.distance - a.distance) / steps
  local x,y,time,size,speed,distance = a.x, a.y, a.time, a.size, a.speed, a.distance
  for i = 1,steps do
    out = ffi.new("struct ShaderPaintPoint", x, y, time, size, speed, distance, counter)
    ffi.C.pushrustvec(points, out)
    x = x + stepx
    y = y + stepy
    size = size + stepsize
    speed = speed + stepspeed
    distance = distance + stepdistance
    time = time + steptime
    if time > 1 then time = time - 1 end
  end
end


