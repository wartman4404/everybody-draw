uniform mat4 textureMatrix;
precision lowp float;
attribute float vSize;
attribute float vTime;
attribute vec4 vPosition;
attribute float vPointer;
attribute float vSpeed;
attribute float vDistance;
uniform vec3 vColor;
varying float time;
varying float size;
varying vec3 color;

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    time = vTime;
    float tmpSize = vSize * 1500.0;
    size = tmpSize;
    color = hsv2rgb(vec3(fract(vPointer / 33.0), 1.0, 1.0));
    gl_Position = (textureMatrix * vPosition);
    gl_PointSize = clamp(vSpeed, 7.5, 60.0);
}
